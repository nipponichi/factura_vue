import {
  createBaseVNode,
  defineComponent,
  getCurrentInstance,
  h,
  mergeProps,
  onBeforeUnmount,
  onMounted,
  ref,
  render,
  renderSlot,
  setBlockTracking,
  unref,
  watch
} from "./chunk-2FDUVFJ5.js";
import "./chunk-ZS7NZCD4.js";

// node_modules/datatables.net-vue3/dist/datatables.net-vue3.mjs
var w = [
  "childRow",
  "column-sizing",
  "column-visibility",
  "destroy",
  "draw",
  "error",
  "init",
  "length",
  "order",
  "page",
  "preDraw",
  "preInit",
  "preXhr",
  "processing",
  "requestChild",
  "search",
  "stateLoadParams",
  "stateLoaded",
  "stateSaveParams",
  "xhr",
  "autoFill",
  "preAutoFill",
  "buttons-action",
  "buttons-processing",
  "column-reorder",
  "key",
  "key-blur",
  "key-focus",
  "key-refocus",
  "key-return-submit",
  "responsive-display",
  "responsive-resize",
  "rowgroup-datasrc",
  "pre-row-reorder",
  "row-reorder",
  "row-reordered",
  "dtsb-inserted",
  "deselect",
  "select",
  "select-blur",
  "selectItems",
  "selectStyle",
  "user-select",
  "stateRestore-change"
];
var m;
var C = {
  name: "Datatables.netVue",
  inheritAttrs: false,
  use(u) {
    m = u;
  }
};
var L = defineComponent({
  ...C,
  props: {
    ajax: null,
    columns: null,
    data: null,
    options: null
  },
  emits: w,
  setup(u, { expose: d }) {
    const o = u, y = ref(null), i = {}, s = ref(), k = ref([]);
    watch(
      () => o.data,
      (t) => {
        let e = s.value;
        if (e) {
          for (var n = Object.keys(i), l = 0; l < n.length; l++)
            delete i[n[l]];
          e.clear(), e.rows.add(t).draw(false);
        }
      },
      {
        deep: true
      }
    ), onMounted(() => {
      var n, l;
      const t = getCurrentInstance();
      let e = o.options || {};
      if (o.data && (e.data = o.data, D(e.data)), o.columns && (e.columns = o.columns, b(e.columns, t)), o.ajax && (e.ajax = o.ajax), e.columnDefs || (e.columnDefs = []), t) {
        let r = Object.keys(t.slots);
        for (let a = 0; a < r.length; a++) {
          let c = r[a];
          if (c.match(/^column\-/)) {
            let f = c.replace("column-", "");
            e.columnDefs.push({
              target: f.match(/^\d+$/) ? parseInt(f) : f + ":name",
              render: "#" + c
            });
          }
        }
        b(e.columnDefs, t);
      }
      if (!m)
        throw new Error(
          "DataTables library not set. See https://datatables.net/tn/19 for details."
        );
      s.value = new m(unref(y), e), (n = s.value) != null && n.page.info().serverSide && ((l = s.value) == null || l.on("preDraw", function() {
        let r = Object.keys(i);
        for (var a = 0; a < r.length; a++)
          delete i[r[a]];
      }));
      for (let r of w)
        s.value && t && s.value.on(r, function() {
          var a = Array.from(arguments), c = a.shift();
          a.unshift({ event: c, dt: s }), a.unshift(r), t.emit.apply(t, a);
        });
    }), onBeforeUnmount(() => {
      var t;
      (t = s.value) == null || t.destroy(true);
    });
    function D(t) {
      k.value = t.value ? t.value.slice() : t.slice();
    }
    function v(t) {
      return function(e, n, l, r) {
        let a = r.row + "," + r.col;
        if (!i[a]) {
          let c = h("div", t({
            cellData: e,
            colIndex: r.col,
            rowData: l,
            rowIndex: r.row,
            type: n
          }));
          i[a] = document.createElement("div"), render(c, i[a]);
        }
        return i[a];
      };
    }
    function b(t, e) {
      if (e)
        for (let l = 0; l < t.length; l++) {
          let r = t[l];
          if (typeof r.render == "string" && r.render.charAt(0) === "#") {
            var n = r.render.replace("#", "");
            e.slots[n] && (r.render = v(e.slots[n]));
          } else if (typeof r.render == "object" && typeof r.render.display == "string" && r.render.display.charAt(0) === "#") {
            var n = r.render.display.replace("#", "");
            e.slots[n] && (r.render.display = v(e.slots[n]));
          }
        }
    }
    return d({
      dt: s
    }), (t, e) => e[0] || (setBlockTracking(-1), e[0] = createBaseVNode("div", { class: "datatable" }, [
      createBaseVNode("table", mergeProps({
        ref_key: "table",
        ref: y
      }, t.$attrs, { style: { width: "100%" } }), [
        renderSlot(t.$slots, "default")
      ], 16)
    ]), setBlockTracking(1), e[0]);
  }
});
var V = (() => {
  const u = L;
  return u.install = (d) => {
    d.component("Datatables.netVue", u);
  }, u;
})();
export {
  L as DataTable,
  V as default
};
//# sourceMappingURL=datatables__net-vue3.js.map
